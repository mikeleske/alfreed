[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "alfreed"
version = "0.2.0"
authors = [
    {name = "Research Team", email = "research@example.com"},
]
description = "DNA sequence similarity search using DNABERT-2 and FAISS"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = ["bioinformatics", "dna", "sequence", "similarity", "search", "dnabert", "faiss"]

dependencies = [
    # Core dependencies only - ML/CUDA deps managed via requirements.txt for Docker
    "numpy>=1.24.0",
    "pandas>=2.0.0", 
    "pyarrow>=12.0.0",
    "biopython>=1.81",
    "parasail>=1.3.4",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
    "joblib>=1.3.0",
]

[project.optional-dependencies]
# ML dependencies (use requirements.txt for CUDA-specific versions)
ml = [
    "transformers>=4.50.1",
    "torch>=2.4.0",
    "torchvision>=0.15.0", 
    "faiss-cpu>=0.1.0",
    "einops>=0.6.0",
    "huggingface-hub>=0.16.0",
]
# Development dependencies  
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "jupyter>=1.0.0",
    "ipython>=8.14.0",
    "pre-commit>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/mikeleske/alfreed"
Repository = "https://github.com/mikeleske/alfreed.git"
"Bug Tracker" = "https://github.com/mikeleske/alfreed/issues"

[project.scripts]
alfreed = "alfreed.interfaces.cli.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["alfreed*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["alfreed"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "faiss.*",
    "parasail.*",
    "Bio.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/alfreed",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/alfreed"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
